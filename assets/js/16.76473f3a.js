(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{287:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("配置文件相关、自动配置原理")])]),t._v(" "),a("h2",{attrs:{id:"运行原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行原理"}},[t._v("#")]),t._v(" 运行原理")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2NTAzMTExNg==&mid=2247483743&idx=1&sn=431a5acfb0e5d6898d59c6a4cb6389e7&scene=19#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("狂神说SpringBoot02：运行原理初探 (qq.com)"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"启动器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动器"}},[t._v("#")]),t._v(" 启动器")]),t._v(" "),a("p",[t._v("项目的父依赖 "),a("code",[t._v("spring-boot-starter-parent")]),t._v(" 再向上还有一个父依赖 "),a("code",[t._v("spring-boot-dependencies")]),t._v("，即管理SpringBoot版本控制中心。")]),t._v(" "),a("blockquote",[a("p",[t._v("以后导入依赖就可以默认不写版本。")]),t._v(" "),a("p",[t._v("但是如果导入的包没有在依赖中管理就需要手动配置版本。")])]),t._v(" "),a("p",[t._v("包含的启动器依赖见 "),a("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.build-systems.starters",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("springboot-boot-starter-xxx")]),t._v("：就是spring-boot的场景启动器。")]),t._v(" "),a("blockquote",[a("p",[t._v("SpringBoot将所有的功能场景都抽取出来，做成一个个的starter （启动器），只需要在项目中引入这些starter即可，所有相关的依赖都会导入进来 ， 我们要用什么功能就导入什么样的场景启动器即可。")])]),t._v(" "),a("h3",{attrs:{id:"主启动类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主启动类"}},[t._v("#")]),t._v(" 主启动类")]),t._v(" "),a("p",[t._v("默认主启动类")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoApplication")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("@SpringBootApplication")]),t._v("：标注SpringBoot的主配置类，通过运行这个类的main方法来启动SpringBoot应用。该注解中还有其他注解：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("@ComponentScan")]),t._v("：自动扫描并加载符合条件的组件或bean到IOC容器中。")]),t._v(" "),a("li",[a("strong",[t._v("@SpringBootConfiguration")]),t._v(" "),a("ul",[a("li",[t._v("@Configuration：说明是一个配置类，对应Spring的xml配置文件。")]),t._v(" "),a("li",[t._v("@Component：说明启动类也是一个Spring组件，负责启动应用。")])])]),t._v(" "),a("li",[a("strong",[t._v("@EnableAutoConfiguration")]),t._v("：开启自动配置功能。\n"),a("ul",[a("li",[t._v("@AutoConfigurationPackage：自动配置包。")]),t._v(" "),a("li",[t._v("@Import(AutoConfigurationImportSelector.class)：给容器导入组件。")])])])]),t._v(" "),a("p",[t._v("AutoConfigurationImportSelector：自动配置导入选择类")]),t._v(" "),a("p",[t._v("这个类中有一个方法getCandidateConfigurations")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得候选的配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCandidateConfigurations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationMetadata")]),t._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationAttributes")]),t._v(" attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里的getSpringFactoriesLoaderFactoryClass（）方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回的就是我们最开始看的启动自动导入配置文件的注解类；EnableAutoConfiguration")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" configurations "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringFactoriesLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadFactoryNames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpringFactoriesLoaderFactoryClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("notEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("configurations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" configurations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSpringFactoriesLoaderFactoryClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnableAutoConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("接着调用了SpringFactoriesLoader 类的静态方法loadFactoryNames，进而又调用了loadSpringFactories方法。")]),t._v(" "),a("p",[t._v('在loadSpringFactories方法中，会去获取资源**"META-INF/spring.factories"**，并将读取到的资源遍历，封装成一个Properties类。')]),t._v(" "),a("h3",{attrs:{id:"spring-factories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-factories"}},[t._v("#")]),t._v(" spring.factories")]),t._v(" "),a("p",[t._v("在依赖 "),a("code",[t._v("spring-boot-autoconfigure")]),t._v(" 下找到spring.factories文件，打开会发现很多自动配置的文件，"),a("strong",[t._v("就是自动配置的根源")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nova-mist/HexoBlogResources@main/images/2022/image-20220302154828923.png",alt:"image-20220302154828923"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nova-mist/HexoBlogResources@main/images/2022/image-20220302155100763.png",alt:"image-20220302155100763"}})]),t._v(" "),a("p",[a("strong",[t._v("打开一个自动配置类查看，例如WebMVCAutoConfiguration，会发现属于JavaConfig配置类，并且注入了Bean。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nova-mist/HexoBlogResources@main/images/2022/image-20220302155221789.png",alt:"image-20220302155221789"}})]),t._v(" "),a("h3",{attrs:{id:"步骤总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤总结"}},[t._v("#")]),t._v(" 步骤总结")]),t._v(" "),a("ol",[a("li",[t._v("SpringBoot在启动的时候从类路径下的META-INF/spring.factories中获取"),a("strong",[t._v("EnableAutoConfiguration指定的值")]),t._v("（来自于导入的对应的start启动器）。所有自动配置类都在路径下，但只有符合指定的条件才会生效。")]),t._v(" "),a("li",[t._v("将这些值作为自动配置类导入容器 ， 自动配置类就开始生效 ， 帮我们进行自动配置工作（导入并配置好场景所需的所有组件），就不用手动编写配置并注入。")]),t._v(" "),a("li",[t._v("整个J2EE的整体解决方案和自动配置都在springboot-autoconfigure的jar包中。")])]),t._v(" "),a("h3",{attrs:{id:"springapplication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springapplication"}},[t._v("#")]),t._v(" SpringApplication")]),t._v(" "),a("p",[t._v("SpringApplication.run方法分两部分：")]),t._v(" "),a("ul",[a("li",[t._v("SpringApplication的实例化")]),t._v(" "),a("li",[t._v("run方法的执行")])]),t._v(" "),a("p",[a("strong",[t._v("这个类主要做了以下四件事情：")])]),t._v(" "),a("p",[t._v("1、推断应用的类型是普通的项目还是Web项目")]),t._v(" "),a("p",[t._v("2、查找并加载所有可用初始化器 ， 设置到initializers属性中")]),t._v(" "),a("p",[t._v("3、找出所有的应用程序监听器，设置到listeners属性中")]),t._v(" "),a("p",[t._v("4、推断并设置main方法的定义类，找到运行的主类")]),t._v(" "),a("p",[a("strong",[t._v("run方法的流程分析图")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nova-mist/HexoBlogResources@main/images/2022/640",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"yaml配置注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml配置注入"}},[t._v("#")]),t._v(" yaml配置注入")]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("配置文件的作用：修改SpringBoot自动配置的默认值。")]),t._v(" "),a("p",[t._v("yaml语法特点：")]),t._v(" "),a("ol",[a("li",[t._v("空格不能省略")]),t._v(" "),a("li",[t._v("用缩进控制层级关系")]),t._v(" "),a("li",[t._v("属性和值大小写敏感")])]),t._v(" "),a("p",[t._v("application.yaml例子")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 普通的key-value形式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ysama\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ysama\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 行内写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ysama"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dog\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8082")]),t._v("\n")])])]),a("p",[t._v("application.properties例子")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只能保存键值对")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("ysama")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("student.name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("ysama")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("student.age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("22")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8082")]),t._v("\n")])])]),a("h3",{attrs:{id:"赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值"}},[t._v("#")]),t._v(" 赋值")]),t._v(" "),a("p",[a("strong",[t._v("原生的赋值方式")]),t._v("：使用@Component、@Value、@Autowired注解。")]),t._v(" "),a("p",[t._v("Alt+Insert 设置有参无参构造器、setter/getter、toString方法。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注册bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Qualifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dog1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 限定符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿黄"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"18"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoApplicationTests")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将狗狗自动注入进来")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Qualifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dog1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contextLoads")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印看下狗狗对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("使用yaml配置的赋值方式")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ysama\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("happy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("birth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2000/10/04\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("a1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("a2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" b2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" a\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" b\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" c\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ok\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n@ConfigurationProperties作用：\n将配置文件中配置的每一个属性的值，映射到这个组件中；\n告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定\n参数 prefix = “person” : 将配置文件中的person下面的所有属性一一对应\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注册bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConfigurationProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" happy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" birth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" maps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" lists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("yaml配置的应用：将之前的配置文件修改为配置类，通过yaml配置进行注入。")])]),t._v(" "),a("h3",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("p",[a("strong",[t._v("出现问题报错，但不影响程序运行，添加依赖可修复。")])]),t._v(" "),a("blockquote",[a("p",[t._v("Spring Boot Configuration Annotation Processor not configured.")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 导入配置文件处理器，配置文件进行绑定就会有提示，需要刷新Maven --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-configuration-processor"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("optional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("optional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[a("strong",[t._v("properties文件乱码")])]),t._v(" "),a("p",[t._v("解决方法：Ctrl+Alt+S打开配置，修改文件编码为utf-8。")]),t._v(" "),a("h3",{attrs:{id:"配置文件中的变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件中的变量"}},[t._v("#")]),t._v(" 配置文件中的变量")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" qinjiang$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random.uuid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 随机uuid")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random.int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 随机int")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("happy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("birth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2000/01/01\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("k1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("k2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" code\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" girl\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" music\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("person.hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("_旺财 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前项不存在就取冒号后的值")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h3",{attrs:{id:"其他的注入形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他的注入形式"}},[t._v("#")]),t._v(" 其他的注入形式")]),t._v(" "),a("p",[t._v("**@PropertySource ：**加载指定的配置文件；")]),t._v(" "),a("p",[a("strong",[t._v("@configurationProperties")]),t._v("：默认从全局配置文件中获取值；")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注册bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PropertySource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:user.properties"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接使用@value")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${my.name}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从配置文件中取值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#{9*2}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #{SPEL} Spring表达式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字面量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"配置注入和-value对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置注入和-value对比"}},[t._v("#")]),t._v(" 配置注入和@value对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("@ConfigurationProperties")]),t._v(" "),a("th",[t._v("@Value")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("功能")]),t._v(" "),a("td",[t._v("批量注入配置文件中的属性")]),t._v(" "),a("td",[t._v("一个个指定")])]),t._v(" "),a("tr",[a("td",[t._v("松散绑定")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("不支持")])]),t._v(" "),a("tr",[a("td",[t._v("SpEL表达式")]),t._v(" "),a("td",[a("strong",[t._v("不支持")])]),t._v(" "),a("td",[a("strong",[t._v("支持")])])]),t._v(" "),a("tr",[a("td",[t._v("JSR303数据校验")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("不支持")])]),t._v(" "),a("tr",[a("td",[t._v("复杂类型封装")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("不支持")])])])]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ol",[a("li",[t._v("松散绑定就是支持松散的语法，即yaml中的 "),a("code",[t._v("last-name")]),t._v(" 等同于实体类中的 "),a("code",[t._v("lastName")]),t._v(" ，默认 "),a("code",[t._v("-")]),t._v(" 后面跟着的字母是大写的。")]),t._v(" "),a("li",[t._v("JSR303数据校验就是在字段是增加一层过滤器验证，可以保证数据的合法性。")]),t._v(" "),a("li",[t._v("复杂类型封装：yml中可以封装对象 ，使用value就不支持。")]),t._v(" "),a("li",[t._v("SpEL表达式：即"),a("strong",[t._v("Spring表达式语言")]),t._v("，可以缩减代码量，主要用于\n"),a("ul",[a("li",[t._v("注解@Value")]),t._v(" "),a("li",[t._v("XML配置")]),t._v(" "),a("li",[t._v("创建Expression对象来执行SpEL")])])]),t._v(" "),a("li",[a("strong",[t._v("如果在业务中只需要获取配置文件的某个值可以使用@Value；如果需要专门编写JavaBean来和配置文件进行映射就直接使用@ConfigurationProperties从配置文件中获取值。")])])]),t._v(" "),a("h2",{attrs:{id:"jsr303数据校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsr303数据校验"}},[t._v("#")]),t._v(" JSR303数据校验")]),t._v(" "),a("p",[t._v("Springboot中可以用**@validated**来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理。")]),t._v(" "),a("p",[a("strong",[t._v("例如Email的格式校验")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注册bean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConfigurationProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Validated")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据校验")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Email")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"邮箱格式错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//name必须是邮箱格式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"问题-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-2"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("p",[a("strong",[t._v("@Email报错")])]),t._v(" "),a("p",[t._v("解决方法：导入相关依赖")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-validation"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"常见参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见参数"}},[t._v("#")]),t._v(" 常见参数")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"名字不能为空"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"年龄最大不能查过120"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Email")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"邮箱格式错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n空检查\n@Null       验证对象是否为null\n@NotNull    验证对象是否不为null, 无法查检长度为0的字符串\n@NotBlank   检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.\n@NotEmpty   检查约束元素是否为NULL或者是EMPTY.\n    \nBooelan检查\n@AssertTrue     验证 Boolean 对象是否为 true  \n@AssertFalse    验证 Boolean 对象是否为 false  \n    \n长度检查\n@Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内  \n@Length(min=, max=) string is between min and max included.\n\n日期检查\n@Past       验证 Date 和 Calendar 对象是否在当前时间之前  \n@Future     验证 Date 和 Calendar 对象是否在当前时间之后  \n@Pattern    验证 String 对象是否符合正则表达式的规则\n\n.......等等\n除此以外，我们还可以自定义一些数据校验规则\n**/")]),t._v("\n")])])]),a("h2",{attrs:{id:"多环境切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多环境切换"}},[t._v("#")]),t._v(" 多环境切换")]),t._v(" "),a("h3",{attrs:{id:"配置文件的加载位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件的加载位置"}},[t._v("#")]),t._v(" 配置文件的加载位置")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/1.0.1.RELEASE/reference/html/boot-features-external-config.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("21. Externalized Configuration (spring.io)"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("配置文件 "),a("code",[t._v("application.properties")]),t._v(" 加载优先级顺序：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("file:./config/")]),t._v(" 项目路径（与 src 目录平行）")]),t._v(" "),a("li",[a("code",[t._v("file:./")])]),t._v(" "),a("li",[a("code",[t._v("classpath:/config")]),t._v(" 资源路径 resources 中的 config目录")]),t._v(" "),a("li",[a("code",[t._v("classpath:/")]),t._v(" 就是 resource 目录")])]),t._v(" "),a("p",[a("strong",[t._v("高优先级的配置会覆盖低优先级的配置，低优先级独有的配置会保留。")])]),t._v(" "),a("p",[t._v("例如，在最低级的配置文件中设置一个项目访问路径的配置来测试：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置项目的访问路径 http://localhost:8080/myapp/hello")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 高优先的8080会覆盖掉")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8085")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.servlet.context-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/myapp")]),t._v("\n")])])]),a("h3",{attrs:{id:"多配制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多配制文件"}},[t._v("#")]),t._v(" 多配制文件")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("默认使用application.properties主配置文件")])]),t._v(" "),a("li",[t._v("application-test.properties 代表测试环境配置")]),t._v(" "),a("li",[t._v("application-dev.properties 代表开发环境配置")])]),t._v(" "),a("p",[t._v("通过在主配置文件中激活来切换环境（"),a("strong",[t._v("还是会补全独有的配置，如上例")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定使用dev环境 切换不同的端口号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.profiles.active")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("dev")]),t._v("\n")])])]),a("h3",{attrs:{id:"yaml多文档块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml多文档块"}},[t._v("#")]),t._v(" yaml多文档块")]),t._v(" "),a("p",[t._v("可以将多个配置写在同一个文件中。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8086")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#选择要激活那个环境块 不写就是默认port")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prod\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8083")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("activate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on-profile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8084")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("activate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on-profile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prod\n")])])]),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ol",[a("li",[t._v("环境的切换属于平行关系，只有配置文件优先级属于层级关系才涉及到覆盖和补全。")]),t._v(" "),a("li",[t._v("application.properties和application.yaml不要同时出现，会发生冲突，"),a("strong",[t._v("如果同时存在默认使用properties的配置")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"自动配置原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动配置原理"}},[t._v("#")]),t._v(" 自动配置原理")]),t._v(" "),a("h3",{attrs:{id:"分析原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析原理"}},[t._v("#")]),t._v(" 分析原理")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2NTAzMTExNg==&mid=2247483766&idx=1&sn=27739c5103547320c505d28bec0a9517&scene=19#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("狂神说SpringBoot05：自动配置原理 (qq.com)"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一旦配置类生效，就会给容器中添加各种组件。")])]),t._v(" "),a("li",[a("p",[t._v("这些组件的属性就是从对应的properties类中获取的。")])]),t._v(" "),a("li",[a("p",[t._v("properties类中的属性和配置文件绑定，即配置的属性在xxxProperties类中封装着。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("在配置文件中配置某个功能时可以参照属性类。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从配置文件中获取指定的值和bean的属性进行绑定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConfigurationProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spring.http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpProperties")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .....")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v('属性类（spring.factories）通过@ConfigurationProperties(prefix="")与配置文件application.yaml关联。')]),t._v(" "),a("p",[t._v("（"),a("strong",[t._v("查看代码的过程")]),t._v("）yaml中任意配置 --\x3e xxxProperties.java --\x3e (spring.factories) xxxAutoConfiguration.java 通过@EnableConfigurationProperties绑定了xxxProperties.java但是不满足条件注解@ConditionalOnxxx（没有在pom.xml配置starter启动器）所以没有生效。")]),t._v(" "),a("p",[a("strong",[t._v("xxxxAutoConfigurartion：自动配置类，给容器中添加组件。")])]),t._v(" "),a("p",[a("strong",[t._v("xxxxProperties：封装配置文件中相关属性。")])]),t._v(" "),a("h3",{attrs:{id:"概括"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概括"}},[t._v("#")]),t._v(" 概括")]),t._v(" "),a("blockquote",[a("p",[t._v("SpringBoot启动时会加载大量的自动配置类，每个配置类中又默认配置了一些组件并且会从properties类中获取属性，而properties类又和配置文件绑定，"),a("strong",[t._v("如果想要修改或添加一些组件的属性就可以在配置文件中设定")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"conditional"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditional"}},[t._v("#")]),t._v(" @Conditional")]),t._v(" "),a("p",[t._v("@Conditional指定的条件成立才会给容器中添加组件，配置类才会生效。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nova-mist/HexoBlogResources@main/images/2022/640%20(1).jpg",alt:"640 (1)"}})]),t._v(" "),a("p",[a("strong",[t._v("查看自动配置类的生效情况")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启springboot的调试类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("Positive matches:（自动配置类启用的：正匹配）")]),t._v(" "),a("p",[t._v("Negative matches:（没有启动，没有匹配成功的自动配置类：负匹配）")]),t._v(" "),a("p",[t._v("Unconditional classes: （没有条件的类）")])])}),[],!1,null,null,null);a.default=e.exports}}]);