(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{328:function(a,s,t){"use strict";t.r(s);var e=t(13),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("一下子剩下的都写上来了。但基本上都是copy书上的内容吧。(。_。)")]),a._v(" "),s("h2",{attrs:{id:"检索数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检索数据"}},[a._v("#")]),a._v(" 检索数据")]),a._v(" "),s("h3",{attrs:{id:"检索不同的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检索不同的值"}},[a._v("#")]),a._v(" 检索不同的值")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT DISTINCT vend_id FROM Products;\n-- 作用于所有的列 vend_id, prod_price 联合条件令每一行都不同\n")])])]),s("h3",{attrs:{id:"限制结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#限制结果"}},[a._v("#")]),a._v(" 限制结果")]),a._v(" "),s("p",[a._v("第一个被检索的行是 "),s("strong",[a._v("第0行")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_name FROM Products LIMIT 5 OFFSET 2;\n-- 从第2行起的5行数据\n-- 简写 LIMIT 2,5\n-- MySQL MariaDB SQLite\n-- 另外的不同的DBMS有着不同的写法 SQL Server Access Oracle\n")])])]),s("h2",{attrs:{id:"排序检索数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序检索数据"}},[a._v("#")]),a._v(" 排序检索数据")]),a._v(" "),s("blockquote",[s("p",[a._v("数据库设计理论认为：如果不规定排序顺序，不应该假定检索出的数据的顺序有任何意义。")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_id, prod_price, prod_name\nFROM Products\nORDER BY prod_price, prod_name;\n-- 先按价格排序再按姓名排序\n")])])]),s("h3",{attrs:{id:"按列位置排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按列位置排序"}},[a._v("#")]),a._v(" 按列位置排序")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_id, prod_price, prod_name\nFROM Products\nORDER BY 2, 3;\n-- 同上\n")])])]),s("h3",{attrs:{id:"指定方向排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定方向排序"}},[a._v("#")]),a._v(" 指定方向排序")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_id, prod_price, prod_name\nFROM Products\nORDER BY prod_price ASC;\n-- 默认升序ASC | 降序DESC\n-- 在多个列上降序排序，必须对每一列指定 DESC 关键字\n")])])]),s("h3",{attrs:{id:"过滤数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过滤数据"}},[a._v("#")]),a._v(" 过滤数据")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_name, prod_price\nFROM Products\nWHERE prod_price = 3.49;\n")])])]),s("blockquote",[s("p",[a._v("操作符")]),a._v(" "),s("p",[a._v("= 等于 <> != 不等于  >= 大于等于")]),a._v(" "),s("p",[a._v("!> 不大于  BETWEEN AND 在指定的两个值之间  IS NULL")])]),a._v(" "),s("h2",{attrs:{id:"高级数据过滤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级数据过滤"}},[a._v("#")]),a._v(" 高级数据过滤")]),a._v(" "),s("p",[a._v("关键字 AND OR")]),a._v(" "),s("p",[a._v("AND优先级更大 "),s("code",[a._v("WHERE (vend_id = 'DLL01' OR vend_id = 'BRS01') AND prod_price >= 10")])]),a._v(" "),s("p",[a._v("IN 操作符相当于 OR  "),s("code",[a._v("WHERE vend_id IN ('DLL01', 'BRS01') AND prod_price >= 10")])]),a._v(" "),s("p",[a._v("NOT 关键字 用来否定 IN BETWEEN EXISTS 子句")]),a._v(" "),s("h2",{attrs:{id:"通配符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配符"}},[a._v("#")]),a._v(" 通配符")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_id, prod_name\nFROM Products\nWHERE prod_name LIKE 'Fish%';\n-- %表示任何字符出现任意次数\n-- WHERE email LIKE b%@forta.com\n-- _ 匹配单个字符\n-- [] 指定字符集 [^AB]\n")])])]),s("h2",{attrs:{id:"计算字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算字段"}},[a._v("#")]),a._v(" 计算字段")]),a._v(" "),s("h3",{attrs:{id:"拼接字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拼接字段"}},[a._v("#")]),a._v(" 拼接字段")]),a._v(" "),s("p",[a._v("有的使用 + 有的使用 ||")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- MySQL MariaDB\nSELECT Concat(vend_name,' (', TRIM(vend_country),')')\nFROM vendors\nORDER BY vend_name;\n")])])]),s("p",[s("code",[a._v("LTRIM()")]),a._v(" "),s("code",[a._v("TRIM()")]),a._v(" 去掉空格")]),a._v(" "),s("h3",{attrs:{id:"使用别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用别名"}},[a._v("#")]),a._v(" 使用别名")]),a._v(" "),s("p",[s("code",[a._v("SELECT Concat(vend_name,' (', TRIM(vend_country),')') AS vend_title")])]),a._v(" "),s("h3",{attrs:{id:"计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算"}},[a._v("#")]),a._v(" 计算")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_id, quantity, item_price, quantity*item_price AS expanded_price\nFROM OrderItems\nWHERE order_num = 20008;\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 简单计算\nSELECT 3*2;\nSELECT Trim(' abc ');\nSELECT Now();\n")])])]),s("h2",{attrs:{id:"使用函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用函数"}},[a._v("#")]),a._v(" 使用函数")]),a._v(" "),s("h3",{attrs:{id:"文本处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文本处理"}},[a._v("#")]),a._v(" 文本处理")]),a._v(" "),s("blockquote",[s("p",[a._v("LEFT() 返回字符串左边的字符 RIGHT()")]),a._v(" "),s("p",[a._v("LENGTH() 长度")]),a._v(" "),s("p",[a._v("LOWER() UPPER() 小写 大写")]),a._v(" "),s("p",[a._v("LTRIM() RTRIM() 去掉左右的的空格")])]),a._v(" "),s("h3",{attrs:{id:"日期和时间处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间处理"}},[a._v("#")]),a._v(" 日期和时间处理")]),a._v(" "),s("p",[a._v("每种 DBMS 都有自己的特殊形式。"),s("strong",[a._v("查阅相关文档")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT order_num\nFROM Orders\nWHERE year(order_date) = 2012;\n")])])]),s("h3",{attrs:{id:"数值处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值处理"}},[a._v("#")]),a._v(" 数值处理")]),a._v(" "),s("blockquote",[s("p",[a._v("ABS( )")]),a._v(" "),s("p",[a._v("EXP( )")]),a._v(" "),s("p",[a._v("SQRT( ) 平方根")]),a._v(" "),s("p",[a._v("AVG( ) 返回某列的平均值")]),a._v(" "),s("p",[a._v("COUNT( ) 返回某列的行数 COUNT(*) COUNT(cust_email)")]),a._v(" "),s("p",[a._v("MAX( ) 返回某列的最大值")]),a._v(" "),s("p",[a._v("MIN( ) 返回某列的最小值")]),a._v(" "),s("p",[a._v("SUM( ) 列的和")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 只处理不同的值\nSELECT AVG(DISTINCT prod_price) AS avg_price\nFROM Products\nWHERE vend_id = 'DLL01';\n-- DISTINCT 只是用列名\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT COUNT(*) AS num_items,\nMIN(prod_price) AS price_min,\nMAX(prod_price) AS price_max,\nAVG(prod_price) AS price_avg\nFROM Products;\n")])])]),s("h2",{attrs:{id:"分组数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组数据"}},[a._v("#")]),a._v(" 分组数据")]),a._v(" "),s("p",[a._v("用来汇总表内容的子集。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT vend_id, COUNT(*) AS num_prods\nFROM Products\nGROUP BY vend_id;\n-- 返回每个供应商提供的产品数目\n")])])]),s("p",[a._v("HAVING 过滤分组 支持所有的 WHERE 操作符")]),a._v(" "),s("p",[s("strong",[a._v("WHERE 在数据分组前进行过滤， HAVING 在数据分组后进行过滤")])]),a._v(" "),s("p",[a._v("HAVING 基于分组聚集值，经常与 GROUP BY 搭配")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT vend_id, COUNT(*) AS num_prods\nFROM Products\nWHERE prod_price >= 4\nGROUP BY vend_id\nHAVING COUNT(*) >= 2;\n")])])]),s("h2",{attrs:{id:"使用子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用子查询"}},[a._v("#")]),a._v(" 使用子查询")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT cust_name, cust_contact\nFROM Customers\nWHERE cust_id IN (SELECT cust_id\n                 FROM Orders\n                 WHERE order_num IN (SELECT order_num\n                                    FROM OrderItems\n                                    WHERE prod_id = 'RGAN01'));\n")])])]),s("p",[a._v("由货物 id 查询订单编号，进而查询顾客 id，进而查询顾客信息。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 使用联结\nSELECT cust_name, cust_contact\nFROM Customers, Orders, OrderItems\nWHERE Customers.cust_id = Orders.cust_id\nAND OrderItems.order_num = Orders.order_num\nAND prod_id = 'RGAN01';\n")])])]),s("h3",{attrs:{id:"作为计算字段使用子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作为计算字段使用子查询"}},[a._v("#")]),a._v(" 作为计算字段使用子查询")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT cust_name, cust_state,\n(SELECT COUNT(*)\nFROM Orders\nWHERE Orders.cust_id = Customers.cust_id) AS orders\nFROM Customers\nORDER BY cust_name;\n")])])]),s("h2",{attrs:{id:"联结表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联结表"}},[a._v("#")]),a._v(" 联结表")]),a._v(" "),s("blockquote",[s("p",[a._v("相关的数据最好不要出现多次。")]),a._v(" "),s("p",[a._v("关系表的设计是要把信息分解成多个表，一类数据一个表。各表通过某些共同的值互相关联。")])]),a._v(" "),s("p",[a._v("主键 primary key")]),a._v(" "),s("p",[s("strong",[a._v("如果数据存储在多个表中，使用联结（join）可以用一条 SELECT 语句就检索出数据。")])]),a._v(" "),s("h3",{attrs:{id:"创建联结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建联结"}},[a._v("#")]),a._v(" 创建联结")]),a._v(" "),s("p",[a._v("等值联结 / 内联结 INNER JOIN ON")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT vend_name, prod_name, prod_price\nFROM Vendors, Products\nWHERE Vendors.vend_id = Products.vend_id;\n-- WHERE 子句作为过滤条件 只包含联结条件的行 是必要的\n-- 第一个表中的每一行与第二个表中的每一个行配对\nSELECT vend_name, prod_name, prod_price\nFROM Vendors INNER JOIN Products\nON Vendors.vend_id = Products.vend_id;\n")])])]),s("h3",{attrs:{id:"联结多个表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联结多个表"}},[a._v("#")]),a._v(" 联结多个表")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT prod_name, vend_name, prod_price, quantity\nFROM OrderItems, Products, Vendors\nWHERE Product.vend_id = Vendors.vend_id\nAND OrderItems.prod_id = Products.prod_id\nAND order_num = 20007;\n")])])]),s("blockquote",[s("p",[a._v("不要联结不必要的表，联结的表越多，性能下降的越厉害。")])]),a._v(" "),s("p",[s("strong",[a._v("可以使用联结查询来替换子查询。")])]),a._v(" "),s("h2",{attrs:{id:"创建高级联结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建高级联结"}},[a._v("#")]),a._v(" 创建高级联结")]),a._v(" "),s("h3",{attrs:{id:"使用表别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用表别名"}},[a._v("#")]),a._v(" 使用表别名")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT cust_name, cust_contact\nFROM customers AS C, Orders AS O, OrderItems AS OI\nWHERE C.cust_id = O.cust_id\nAND OI.order_num = O.order_num\nAND prod_id = 'RGAN01';\n")])])]),s("h3",{attrs:{id:"使用不同类型的联结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用不同类型的联结"}},[a._v("#")]),a._v(" 使用不同类型的联结")]),a._v(" "),s("ul",[s("li",[a._v("内联结 / 等值联结")]),a._v(" "),s("li",[a._v("自联结 self-join")]),a._v(" "),s("li",[a._v("自然联结 natural join")]),a._v(" "),s("li",[a._v("外联结 outer join")])]),a._v(" "),s("p",[a._v("自联结：能在一条 SELECT 语句中不止一次引用相同的表。")]),a._v(" "),s("blockquote",[s("p",[a._v("自联结通常作为外部语句，用来替代从相同表中检索数据的使用子查询语句。")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT c1.cust_id, c1.cust_name, c1.cust_contact\nFROM Customers AS c1, Customers AS c2\nWHERE c1.cust_name = c2.cust_name\nAND c2.cust_contact = 'Jim Jones';\n")])])]),s("p",[a._v("自然联结：每一个列只出现一次。")]),a._v(" "),s("p",[a._v("外联结：包含在相关表中没有关联行的行。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT Customers.cust_id, Orders.order_num\nFROM Customers INNER JOIN Orders\nON Customers.cust_id = Orders.cust_id;\n-- 两个表中都有 SELECT 的值时，要指定表，否则会有歧义\n")])])]),s("p",[a._v("LEFT OUTER JOIN 从FROM子句左边的表中选择所有行。")]),a._v(" "),s("p",[a._v("RIGHT OUTER JOIN 从FROM子句右边的表中选择所有行。")]),a._v(" "),s("h3",{attrs:{id:"使用带聚集函数的联结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用带聚集函数的联结"}},[a._v("#")]),a._v(" 使用带聚集函数的联结")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT Customers.cust_id\nCOUNT(Orders.order_num) AS num_ord\nFROM Customers INNER JOIN Orders\nON Customers.cust_id = Orders.cust_id\nGROUP BY Customers.cust_id;\n")])])]),s("h2",{attrs:{id:"组合查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合查询"}},[a._v("#")]),a._v(" 组合查询")]),a._v(" "),s("p",[a._v("UNION")]),a._v(" "),s("p",[a._v("将多个查询结果合并，但是每个查询必须包含相同的列。")]),a._v(" "),s("p",[a._v("默认去除重复的行，使用 "),s("code",[a._v("UNION ALL")]),a._v(" 返回所有的匹配行。")]),a._v(" "),s("p",[s("strong",[a._v("只允许在末尾使用 ORDER BY")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT cust_name, cust_contact, cust_email\nFROM Customers\nWHERE cust_state IN ('IL', 'IN', 'MI')\nUNION\nSELECT cust_name, cust_contact, cust_email\nFROM Customers\nWHERE cust_name = 'Fun4All'\nORDER BY cust_name, cust_contact;\n")])])]),s("h2",{attrs:{id:"插入数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[a._v("#")]),a._v(" 插入数据")]),a._v(" "),s("h3",{attrs:{id:"插入完整的行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入完整的行"}},[a._v("#")]),a._v(" 插入完整的行")]),a._v(" "),s("p",[s("strong",[a._v("INSERT")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 不安全\n/*\nINSERT INTO Customers\nVALUES('1000006',\n      'Toy Land',\n      'hhhh',\n      NULL);\n*/\nINSERT INTO Customers(cust_id,\n                     cust_name,\n                     cust_other)\nVALUES('20000',\n      'Toy Land',\n      NULL)\n-- 优点：语句不受表的结构改变而影响\n")])])]),s("h3",{attrs:{id:"插入部分行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入部分行"}},[a._v("#")]),a._v(" 插入部分行")]),a._v(" "),s("p",[a._v("省略列：该列定义为允许 NULL 或给出了默认值。")]),a._v(" "),s("h3",{attrs:{id:"插入检索出的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入检索出的数据"}},[a._v("#")]),a._v(" 插入检索出的数据")]),a._v(" "),s("p",[a._v("可以插入多行，可以包含 WHERE 子句，过滤插入的数据。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT INTO Customers(cust_id,\n                     cust_name,\n                     cust_other)\n-- 这里的列名可以不同 但要一一对应\nSELECT cust_id,\ncust_name,\ncust_other\nFROM CustNew;\n")])])]),s("h3",{attrs:{id:"从一个表复制到一个表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从一个表复制到一个表"}},[a._v("#")]),a._v(" 从一个表复制到一个表")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 可以复制部分列\nCREATE TALBE CustCopy AS\nSELECT * FROM Customers;\n")])])]),s("h2",{attrs:{id:"更新和删除数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新和删除数据"}},[a._v("#")]),a._v(" 更新和删除数据")]),a._v(" "),s("h3",{attrs:{id:"更新行-删除列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新行-删除列"}},[a._v("#")]),a._v(" 更新行/删除列")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("UPDATE Customers\nSET cust_contact = 'Sam Roberts',\ncust_email = 'sam@toyland.com'\nWHERE cust_id = '100006'; -- 如果不加 WHERE限制 会更新所有行\n-- 删除某个列的值\n-- SET cust_email = NULL\n")])])]),s("p",[a._v("还可以在 "),s("code",[a._v("UPDATE")]),a._v(" 语句中使用子查询")]),a._v(" "),s("h3",{attrs:{id:"删除行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除行"}},[a._v("#")]),a._v(" 删除行")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DELETE FROM Customers\nWHERE cust_id = '100006';\n")])])]),s("h2",{attrs:{id:"创建和操纵表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建和操纵表"}},[a._v("#")]),a._v(" 创建和操纵表")]),a._v(" "),s("h3",{attrs:{id:"创建表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建表"}},[a._v("#")]),a._v(" 创建表")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE TABLE OrderItems\n(\n    order_num INTEGER NOT NULL,\n    order_item INTEGER NOT NULL,\n    prod_id CHAR(10) NOT NULL,\n    quantity INTEGER NOT NULL DEFAULT 1,\n    item_price DECIMAL(8,2) NOT NULL\n);\n")])])]),s("h3",{attrs:{id:"更新表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新表"}},[a._v("#")]),a._v(" 更新表")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE Vendors\nADD vend_phone CHAR(20);\nALTER TABLE Vendors\nDROP COLUMN vend_phone;\n")])])]),s("h3",{attrs:{id:"删除表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除表"}},[a._v("#")]),a._v(" 删除表")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DROP TABLE CustCopy;\n")])])]),s("p",[a._v("通常会禁止删除与其他表相关联的表。")]),a._v(" "),s("h2",{attrs:{id:"使用视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用视图"}},[a._v("#")]),a._v(" 使用视图")]),a._v(" "),s("p",[a._v("视图不包含任何列或数据，是一个虚拟表，包含一个查询。"),s("strong",[a._v("封装思想")])]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("简化操作、便于复用")])]),a._v(" "),s("li",[a._v("使用表的一部分而不是整个表")])]),a._v(" "),s("h3",{attrs:{id:"创建视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建视图"}},[a._v("#")]),a._v(" 创建视图")]),a._v(" "),s("p",[a._v("CREATE VIEW")]),a._v(" "),s("p",[a._v("更新视图必须先删除再重新创建 DROP VIEW viewname")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE VIEW ProductCustomers AS\nSELECT cust_name, cust_contact, prod_id\nFROM Customers, Orders, OrderItems\nWHERE Customers.cust_id = Orders.cust_id\nAND OrderItems.order_num = Orders.order_num;\n\nSELECT cust_name, cust_contact\nFROM ProductCustomers\nWHERE prod_id = 'RGAN01';\n")])])]),s("h3",{attrs:{id:"应用视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用视图"}},[a._v("#")]),a._v(" 应用视图")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE VIEW VendorLocations AS\nSELECT Concat(RTRIM(vend_name),' (',RTRIM(vend_country),\")\") AS vend_title\nFROM Vendors;\n\nSELECT *\nFROM VendorLocations;\n")])])]),s("h3",{attrs:{id:"过滤不想要的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过滤不想要的数据"}},[a._v("#")]),a._v(" 过滤不想要的数据")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE VIEW CustomerEMailList AS\nSELECT cust_id, cust_name, cust_email\nFROM Customers\nWHERE cust_email IS NOT NULL;\n-- 排除没有电子邮件地址的用户\nSELECT *\nFROM CustomerEMailList;\n")])])]),s("h3",{attrs:{id:"视图与计算字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图与计算字段"}},[a._v("#")]),a._v(" 视图与计算字段")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE VIEW OrderItemsExpanded AS\nSELECT order_num,\nprod_id,\nquantity,\nitem_price,\nquantity*item_price AS expanded_price\nFROM OrderItems;\n\nSELECT *\nFROM OrderItemsExpanded\nWHERE order_num = 20008;\n")])])]),s("h2",{attrs:{id:"存储过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[a._v("#")]),a._v(" 存储过程")]),a._v(" "),s("p",[a._v("为以后使用而保存的一条或多条SQL语句。")]),a._v(" "),s("p",[s("strong",[a._v("简单、安全、高效。")])]),a._v(" "),s("h3",{attrs:{id:"执行存储过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行存储过程"}},[a._v("#")]),a._v(" 执行存储过程")]),a._v(" "),s("p",[a._v("EXECUTE")]),a._v(" "),s("h2",{attrs:{id:"管理事务处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管理事务处理"}},[a._v("#")]),a._v(" 管理事务处理")]),a._v(" "),s("ul",[s("li",[a._v("事务（transaction）一组 SQL 语句")]),a._v(" "),s("li",[a._v("回退（rollback）撤销指定 SQL 语句的过程")]),a._v(" "),s("li",[a._v("提交（commit）将未存储的SQL语句结果写入数据库")]),a._v(" "),s("li",[a._v("保留点（savepoint）事务处理中设置的临时占位符，可以对它发布回退。")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("START TRANSACTION\nDELETE FROM Orders;\nROLLBACK;\nCOMMIT TRANSACTION\n\nSAVEPOINT delete1;\nROLLBACK TO delete1;\n")])])]),s("p",[s("strong",[a._v("保留点越多越好")])]),a._v(" "),s("h2",{attrs:{id:"游标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#游标"}},[a._v("#")]),a._v(" 游标")]),a._v(" "),s("p",[a._v("游标用来在检索出来的行中前进或后退一行或多行。")]),a._v(" "),s("p",[a._v("游标（cursor）是一个存储在 DBMS 服务器上的数据库查询，不是一条 SELECT 语句，而是被该语句检索出来的结果集。")]),a._v(" "),s("p",[a._v("在存储了游标之后，应用程序可以根据需要滚动或浏览其中的数据。")])])}),[],!1,null,null,null);s.default=r.exports}}]);