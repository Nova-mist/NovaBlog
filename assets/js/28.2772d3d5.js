(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{299:function(a,t,e){"use strict";e.r(t);var s=e(13),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"序列化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#序列化"}},[a._v("#")]),a._v(" 序列化")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.geeksforgeeks.org/serialization-in-java/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Serialization and Deserialization in Java with Example - GeeksforGeeks"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("序列化是一种将"),t("strong",[a._v("对象状态")]),a._v("保存为字节流的机制，反序列化则相反。")]),a._v(" "),t("p",[a._v("ByteStream 的形式便于通过文件、内存、数据库来进行传输，本质是传递对象的状态。")]),a._v(" "),t("p",[t("strong",[a._v("序列化方法")])]),a._v(" "),t("ol",[t("li",[a._v("实现 "),t("strong",[a._v("java.io.Serializable")]),a._v(" 接口")]),a._v(" "),t("li",[a._v("最好自己指定一个序列化UID "),t("code",[a._v("private static final long serialversionUID = 129348938L;")]),a._v(" ，默认生成的值受编译器环境影响很大。")])]),a._v(" "),t("p",[a._v("通过 JDK 工具查看 Java classes 的 serialVersionUID （序列化UID）：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("serialver "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("classpath classpath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MySerial")]),a._v("\n")])])]),t("p",[a._v("🟢序列化对象搭配 FileStream 和 ObjectStream 流可以进行文件的读写。")]),a._v(" "),t("p",[t("strong",[a._v("重点：")])]),a._v(" "),t("ul",[t("li",[a._v("序列化接口可以继承")]),a._v(" "),t("li",[a._v("静态数据和 transient 数据不会序列化")]),a._v(" "),t("li",[a._v("反序列化的时候不会调用构造器")]),a._v(" "),t("li",[a._v("要序列化的对象内部包含的对象也要实现序列化接口")])])])}),[],!1,null,null,null);t.default=r.exports}}]);