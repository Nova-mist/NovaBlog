(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{303:function(a,t,s){"use strict";s.r(t);var e=s(13),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"后加入的忽略文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后加入的忽略文件"}},[a._v("#")]),a._v(" 后加入的忽略文件")]),a._v(" "),t("p",[a._v("如何删除远程仓库中没有及时添加到 "),t("code",[a._v(".gitignore")]),a._v(" 的文件？")]),a._v(" "),t("p",[a._v("因为在本地仓库中，应该被忽略的文件（没有在一开始就添加进 "),t("code",[a._v(".gitignore")]),a._v("）已经是 track 的状态，所以需要先在追踪清单中删除（不是删除本地文件）。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cached")]),a._v(" FILENAME\n")])])]),t("p",[a._v("然后再正常提交、推送到远程仓库进行 merge。")]),a._v(" "),t("p",[t("strong",[a._v("查看被 git 监测的文件")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-tree --full-tree --name-only  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("branch_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("h2",{attrs:{id:"工作区、暂存区、版本库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作区、暂存区、版本库"}},[a._v("#")]),a._v(" 工作区、暂存区、版本库")]),a._v(" "),t("p",[a._v("工作区：电脑里能看到的目录")]),a._v(" "),t("p",[a._v("版本库：工作区中的隐藏目录 "),t("code",[a._v(".git")])]),a._v(" "),t("p",[a._v("暂存区：版本库中的索引文件 "),t("code",[a._v(".git/index")])]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/git/git-workspace-index-repo.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git 工作区、暂存区和版本库 | 菜鸟教程 (runoob.com)"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("一般流程：")]),a._v(" "),t("ol",[t("li",[t("code",[a._v("git diff")]),a._v(" 比较工作区和暂存区的变化")]),a._v(" "),t("li",[t("code",[a._v("git add")]),a._v(" 添加文件变动到暂存区")]),a._v(" "),t("li",[t("code",[a._v("git comit")]),a._v(" 将文件变动从暂存区提交到版本库")]),a._v(" "),t("li",[t("code",[a._v("git checkout")]),a._v(" 切换分支，用版本库的快照替换工作区")])]),a._v(" "),t("h2",{attrs:{id:"远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[a._v("#")]),a._v(" 远程仓库")]),a._v(" "),t("p",[t("strong",[a._v("推送")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" origin main\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 第二次推送就可以省略分支")]),a._v("\n")])])]),t("p",[t("code",[a._v("-u")]),a._v(" 选项的作用是添加远程仓库流，下次直接使用 "),t("code",[a._v("git push")]),a._v(" 就能直接推送到绑定的分支。")]),a._v(" "),t("p",[t("strong",[a._v("拉取")])]),a._v(" "),t("p",[t("code",[a._v("git pull")]),a._v(" 在直观感受上等于 "),t("code",[a._v("git fetch")]),a._v(" + "),t("code",[a._v("git merge")])]),a._v(" "),t("p",[t("strong",[a._v("连接新建的远程空项目")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin git@github.com:Nova-mist/xxxx.git\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-M")]),a._v(" main "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更改分支名 master -> main")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" origin main "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -u 设置推送流 以后 git push 默认推送此流")]),a._v("\n")])])]),t("p",[t("strong",[a._v("删除远程仓库")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--delete")]),a._v(" xxx\n")])])]),t("p",[a._v("如果报错 "),t("code",[a._v("remote ref does not exist")]),a._v(" 就需要清除远程分支的本地缓存")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" origin\n")])])]),t("p",[a._v("获取远程的分支")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v("\n")])])]),t("p",[t("strong",[a._v("克隆指定分支")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("fetch 所有分支，checkout 到指定分支，会 track 所有分支")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("git clone "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("branchname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("remote"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("repo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("只 fetch 单独的分支，这样只会 track 此分支")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("git clone "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("branchname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("single"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("branch "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("remote"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("repo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])])])]),a._v(" "),t("p",[a._v("参考："),t("a",{attrs:{href:"https://www.freecodecamp.org/news/git-clone-branch-how-to-clone-a-specific-branch/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git Clone Branch – How to Clone a Specific Branch (freecodecamp.org)"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);